- name: Install necessary drivers for CUDA on Ubuntu 22.04 under WSL2, meant to be run in the WSL installation hosting h2ogpt
  hosts: "{{ variable_host | default('h2o-wsl') }}"
  # from https://ubuntu.com/tutorials/enabling-gpu-acceleration-on-ubuntu-on-wsl2-with-the-nvidia-cuda-platform
  tasks:
    - name: Update installed apt packages
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist
        autoremove: true
      become: true
    - name: Install some requirements
      ansible.builtin.apt:
        name:
          - build-essential
          - gcc
          - python3.10-dev
          - python3-pip
          - git
          - python3.10-venv
      become: true
    - name: Install pipx and setuptools via pip
      ansible.builtin.pip:
        name:
          - pipx
          - setuptools
        state: present
      become: true
    - name: Install virtualenv via pipx
      community.general.pipx:
        name: virtualenv
        state: present
    - name: Add virtualenv to shell PATH
      ansible.builtin.lineinfile:
        path: /etc/profile
        line: "export PATH=$PATH:{{ ansible_env.HOME }}/.local/bin"
        state: present
      become: true
    - name: Test for virtualenv in environment PATH
      ansible.builtin.shell: grep -o ":{{ ansible_env.HOME }}/.local/bin" /etc/environment | wc -l
      register: test_grep
    - name: Add virtualenv to environment PATH
      ansible.builtin.lineinfile:
        path: /etc/environment
        backrefs: true
        regexp: "PATH=(\/[^\"]*)"
        line: "PATH=\\1:{{ ansible_env.HOME }}/.local/bin"
        state: present
      when: test_grep.stdout == "0"
      become: true
    - name: Install Nvidia package
      ansible.builtin.apt:
        deb: https://developer.download.nvidia.com/compute/cuda/repos/wsl-ubuntu/x86_64/cuda-keyring_1.1-1_all.deb
      become: true
    - name: Install CUDA
      ansible.builtin.apt:
        name: cuda
        state: present
        update_cache: true
      become: true
    - name: Test for CUDA in environment PATH
      ansible.builtin.shell: grep -o ":/usr/local/cuda/bin" /etc/environment | wc -l
      register: test_grep
    - name: Add CUDA to environment PATH
      ansible.builtin.lineinfile:
        path: /etc/environment
        backrefs: true
        regexp: '^PATH=\"(.*)\"'
        line: "PATH=\"\\1:/usr/local/cuda/bin\""
        state: present
      when: test_grep.stdout == "0"
      become: true
    - name: Set up environment variables for CUDA
      ansible.builtin.lineinfile:
        path: /etc/profile
        line: "{{ item }}"
        state: present
      loop:
        - export LD_LIBRARY_PATH=/usr/lib/wsl/lib:$LD_LIBRARY_PATH:/usr/local/cuda/lib64/
        - export CUDA_HOME=/usr/local/cuda
        - export PATH=$PATH:/usr/local/cuda/bin/
      become: true
    - name: Add docker group to the system
      ansible.builtin.group:
        name: docker
        state: present
      become: true
    - name: Add the docker group to the current user
      ansible.builtin.user:
        groups: docker
        name: "{{ ansible_env.USER }}"
        append: true
      become: true
    #- name: Clone bitsandbytes
    #  ansible.builtin.git:
    #    repo: https://github.com/timdettmers/bitsandbytes.git
    #    dest: "{{ ansible_env.HOME }}/bitsandbytes"
    #    clone: true
    #    version: 0.41.0
    #- name: Build bitsandbytes
    #  community.general.make:
    #    chdir: "{{ ansible_env.HOME }}/bitsandbytes"
    #    target: cuda12x
    #    params:
    #      CUDA_VERSION: 122
    #  environment:
    #    PATH: "{{ ansible_env.PATH }}:/usr/local/cuda/bin"
    #- name: Install bitsandbytes via python
    #  ansible.builtin.command:
    #    chdir: "{{ ansible_env.HOME }}/bitsandbytes"
    #    cmd: /usr/bin/python3 setup.py install
    #  become: true
    - name: Ensure CUDA works by compiling a sample app
      ansible.builtin.git:
        repo: https://github.com/nvidia/cuda-samples.git
        dest: "{{ ansible_env.HOME }}/cuda-samples"
        clone: true
        version: v12.2
    - name: Build the sample app
      community.general.make:
        chdir: "{{ ansible_env.HOME }}/cuda-samples/Samples/1_Utilities/deviceQuery"
        make:
    - name: Verify app works
      ansible.builtin.command:
        chdir: "{{ ansible_env.HOME }}/cuda-samples/Samples/1_Utilities/deviceQuery"
        cmd: "./deviceQuery"
      register: command_output
    - ansible.builtin.debug:
        var: command_output.stdout_lines
