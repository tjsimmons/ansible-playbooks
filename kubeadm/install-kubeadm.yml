- hosts: kubernetes
  become: true
  become_user: root
  gather_facts: yes
  tasks:
    - name: add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        id: 0EBFCD88
        state: present
    - name: add Docker repo
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    - name: install Docker
      apt:
        name: "docker-ce=17.03.2*"
        update-cache: yes
        state: present
        force: yes
    - name: add kubernetes gpg key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
    - name: add kubernetes apt repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    - name: install kubectl, kubelet, and kubeadm
      apt:
        name: "{{ item }}"
        update-cache: yes
        state: present
      with_items:
        - kubectl
        - kubelet
        - kubeadm

- hosts: kubernetes-master
  become_user: root
  tasks:
    - name: "initialize kubeadm with flannel CIDR"
      become: true
      command: kubeadm init --pod-network-cidr=10.244.0.0/16
      when: ansible_local.kubeadm is undefined
      register: kubeadm_output
    - name: "create .kube directory"
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        owner: "{{ ansible_env.USER }}"
        group: "{{ ansible_env.USER }}"
        state: directory
      when: ansible_local.kubeadm is undefined
    - name: "copy kube admin.conf to local .kube"
      become: true
      copy:
        remote_src: true
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
      when: ansible_local.kubeadm is undefined
    - name: "install flannel networking"
      command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      when: ansible_local.kubeadm is undefined
    - name: "save join command to disk"
      copy:
        content: "{{ kubeadm_output.stdout | regex_findall('kubeadm join --token .*', '\\1') | join('') }}"
        dest: "{{ ansible_env.HOME }}/kubeadm.join"
        owner: "{{ ansible_env.USER }}"
      when: ansible_local.kubeadm is undefined
    - name: "pull down kubeadm.join"
      fetch:
        src: "{{ ansible_env.HOME }}/kubeadm.join"
        dest: kubeadm.join
        flat: true
    - name: "copy kubernetes config file to localhost"
      become: true
      fetch:
        src: /etc/kubernetes/admin.conf
        dest: ~/.kube/config
        flat: true
    - name: "add kubeadm fact to the system"
      copy:
        src: facts.d/kubeadm.fact
        dest: /etc/ansible/facts.d/
        owner: "{{ ansible_env.USER }}"
      become: true
      when: ansible_local.kubeadm is undefined

- hosts: kubernetes-node
  become_user: root
  tasks:
    - name: "place kubeadm.join command"
      copy:
        src: kubeadm.join
        dest: "{{ ansible_env.HOME }}/kubeadm.join"
        owner: "{{ ansible_env.USER }}"
      when: ansible_local.kubeadm is undefined
    - name: "store kubeadm join command"
      command: "cat {{ ansible_env.HOME }}/kubeadm.join"
      register: kubeadm_join
      when: ansible_local.kubeadm is undefined
    - name: "execute kubeadm join"
      command: "{{ kubeadm_join.stdout }}"
      become: true
      when: ansible_local.kubeadm is undefined
      register: join_output
    - name: "add kubeadm fact to the system"
      copy:
        src: facts.d/kubeadm.fact
        dest: /etc/ansible/facts.d/
        owner: "{{ ansible_env.USER }}"
      become: true
      when: ansible_local.kubeadm is undefined


