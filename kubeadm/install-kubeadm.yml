- name: Install k8s
  hosts: kubernetes
  become: true
  gather_facts: true
  tasks:
    # - name: add Docker GPG key
    #  apt_key:
    #    url: https://download.docker.com/linux/ubuntu/gpg
    #    id: 0EBFCD88
    #    state: present
    # - name: add Docker repo
    #  apt_repository:
    #    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable
    # - name: install Docker
    #  apt:
    #    name:
    #      - docker-ce
    #      - docker-ce-cli
    #      - containerd.io
    #      - docker-buildx-plugin
    #      - docker-compose-plugin
    #    update-cache: true
    #    state: present
    #    force: true
    - name: Add kubernetes gpg key
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        dest: /etc/apt/trusted.gpg.d/k8s.asc
        mode: u+rwx
        force: true
    - name: Add kubernetes apt repository
      ansible.builtin.apt_repository:
        repo: deb https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /
    - name: Install kubectl, kubelet, and kubeadm
      ansible.builtin.apt:
        name:
          - kubectl
          - kubelet
          - kubeadm
        update-cache: true
        state: present

- name: Set up kubectl on master
  hosts: kubernetes_master
  become_user: root
  tasks:
    - name: Install Go
      become: true
      ansible.builtin.unarchive:
        src: https://dl.google.com/go/go1.21.0.linux-amd64.tar.gz
        dest: /usr/local
        remote_src: true
    - name: "Add Go to system PATH"
      become: true
      ansible.builtin.lineinfile:
        path: /etc/profile
        line: "export PATH=$PATH:/usr/local/go/bin"
        state: present
    - name: Install crictl
      become: true
      ansible.builtin.command: "go get github.com/kubernetes-incubator/cri-tools/cmd/crictl"
    - name: Initialize kubeadm with flannel CIDR
      become: true
      ansible.builtin.command: kubeadm init --pod-network-cidr=10.244.0.0/16
      when: ansible_local.kubeadm is undefined
      register: kubeadm_output
    - name: Create .kube directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.kube"
        owner: "{{ ansible_env.USER }}"
        group: "{{ ansible_env.USER }}"
        state: directory
      when: ansible_local.kubeadm is undefined
    - name: Copy kube admin.conf to local .kube
      become: true
      ansible.builtin.copy:
        remote_src: true
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
      when: ansible_local.kubeadm is undefined
    - name: Iinstall flannel networking
      ansible.builtin.command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      when: ansible_local.kubeadm is undefined
    - name: Save join command to disk
      ansible.builtin.copy:
        content: "{{ kubeadm_output.stdout | regex_findall('kubeadm join --token .*', '\\1') | join('') }}"
        dest: "{{ ansible_env.HOME }}/kubeadm.join"
        owner: "{{ ansible_env.USER }}"
      when: ansible_local.kubeadm is undefined
    - name: Pull down kubeadm.join
      ansible.builtin.fetch:
        src: "{{ ansible_env.HOME }}/kubeadm.join"
        dest: kubeadm.join
        flat: true
    - name: Copy kubernetes config file to localhost
      become: true
      ansible.builtin.fetch:
        src: /etc/kubernetes/admin.conf
        dest: ~/.kube/config
        flat: true
    - name: Add kubeadm fact to the system
      ansible.builtin.copy:
        src: facts.d/kubeadm.fact
        dest: /etc/ansible/facts.d/
        owner: "{{ ansible_env.USER }}"
      become: true
      when: ansible_local.kubeadm is undefined

- name: Join nodes to master
  hosts: kubernetes_node
  become_user: root
  tasks:
    - name: Place kubeadm.join command
      ansible.builtin.copy:
        src: kubeadm.join
        dest: "{{ ansible_env.HOME }}/kubeadm.join"
        owner: "{{ ansible_env.USER }}"
        mode: u+rwx
      when: ansible_local.kubeadm is undefined
    - name: Store kubeadm join command
      ansible.builtin.command: "cat {{ ansible_env.HOME }}/kubeadm.join"
      register: kubeadm_join
      when: ansible_local.kubeadm is undefined
    - name: Execute kubeadm join
      ansible.builtin.command: "{{ kubeadm_join.stdout }}"
      become: true
      when: ansible_local.kubeadm is undefined
      register: join_output
    - name: Add kubeadm fact to the system
      ansible.builtin.copy:
        src: facts.d/kubeadm.fact
        dest: /etc/ansible/facts.d/
        owner: "{{ ansible_env.USER }}"
        mode: u+rwx
      become: true
      when: ansible_local.kubeadm is undefined
